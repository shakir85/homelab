apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: node-exporter
  namespace: monitoring
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/whitelist-source-range: "0.0.0.0/0"
    cert-manager.io/cluster-issuer: selfsigned
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - node-exporter.shakir.cloud
      secretName: node-exporter-tls
  rules:
    - host: node-exporter.shakir.cloud
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: node-exporter
                port:
                  number: 9100
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: kubelet
  namespace: monitoring
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    nginx.ingress.kubernetes.io/whitelist-source-range: "0.0.0.0/0"
    cert-manager.io/cluster-issuer: selfsigned
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - kubelet.shakir.cloud
      secretName: kubelet-tls
  rules:
    - host: kubelet.shakir.cloud
      http:
        paths:
          - path: /metrics
            pathType: Prefix
            backend:
              service:
                name: kubelet
                port:
                  number: 10250
          - path: /metrics/cadvisor
            pathType: Prefix
            backend:
              service:
                name: kubelet
                port:
                  number: 10250
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: kube-state-metrics
  namespace: monitoring
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/whitelist-source-range: "0.0.0.0/0"
    cert-manager.io/cluster-issuer: selfsigned
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - kube-state-metrics.shakir.cloud
      secretName: kube-state-metrics-tls
  rules:
    - host: kube-state-metrics.shakir.cloud
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: kube-state-metrics
                port:
                  number: 8080

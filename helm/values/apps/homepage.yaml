image:
  repository: ghcr.io/gethomepage/homepage
  # tag: v0.6.0

# Enable RBAC. RBAC is necessary to use Kubernetes integration
enableRbac: false

extraClusterRoles:
  # - apiGroups:
  #   - some-group
  #   resources:
  #   - some-resource
  #   verbs:
  #   - get

serviceAccount:
  # Specify a different service account name. When blank it will default to the release
  # name if *create* is enabled, otherwise it will refer to the default service account.
  name: ""
  # Create service account. Needed when RBAC is enabled.
  create: false

service:
  main:
    ports:
      http:
        port: 3000

controller:
  strategy: RollingUpdate
  rollingUpdate:
    maxSurge: 25%
    maxUnavailable: 25%

# Enable the ingress to expose Homepage to the network.
ingress:
  main:
    enabled: true
    # labels:
    #   # This label will enable discover of this deployment in Homepage
    #   gethomepage.dev/enabled: "true"
    # annotations:
    #   # These annotations will configure how this deployment is shown in Homepage
    #   gethomepage.dev/name: "Homepage"
    #   gethomepage.dev/description: "A modern, secure, highly customizable application dashboard."
    #   gethomepage.dev/group: "A New Group"
    #   gethomepage.dev/icon: "homepage.png"
    ingressClassName: "nginx"
    hosts:
      - host: home.shakir.cloud
        paths:
          - path: /
            pathType: Prefix
    # tls:
    #   - hosts:
    #       - *host

# All the config files for Homepage can be specified under their relevant config block.
config:
  # To use an existing ConfigMap uncomment this line and specify the name
  # useExistingConfigMap: existing-homepage-configmap
  bookmarks:
    - Bookmarks:
        - GitLab:
            - abbr: GL
              href: https://gitlab.com/
        - LibGen:
            - abbr: LG
              href: https://libgen.is/
        - Reddit:
            - abbr: RD
              href: https://reddit.com/

  services:
      - Infrastructure:
          - Proxmox:
              icon: sh-proxmox
              href: https://pxmx.shakir.cloud
              description: Proxmox Virtual Environment
          - Pfsense:
              icon: sh-pfsense
              href: https://pfsense.shakir.cloud:10443
              description: Pfsense Firewall
          - Grafana:
              icon: grafana
              href: https://grafana.shakir.cloud
              description: Grafana Monitoring
          - Prometheus:
              icon: prometheus
              href: https://prometheus.shakir.cloud
              description: Prometheus Monitoring
          - Alertmanager:
              icon: alertmanager
              href: https://alertmanager.shakir.cloud
              description: Alertmanager for Prometheus
      - Synology:
          - DSM:
              icon: sh-synology
              href: https://nas.shakir.cloud
              description: Synology DSM
          - Photos:
              icon: synology-photos
              href: https://photos.shakir.cloud
              description: Synology Photos
          - Drive:
              icon: synology-drive
              href: https://drive.shakir.cloud
              description: Synology Drive

      - Multimedia:
          - Plex:
              icon: plex
              href: https://plex.shakir.cloud/web/index.html
              description: Plex Media Server
          - Metube:
              icon: metube
              href: https://metube.shakir.cloud
              description: Metube Media Server
          - Deemix:
              icon: deemix
              href: https://deemix.shakir.cloud
              description: Deemix Music Manager
          - Jellyfin:
              icon: jellyfin
              href: https://jellyfin.shakir.cloud
              description: Jellyfin Media Server
          - Gaseous:
              icon: sh-gaseous
              href: https://games.shakir.cloud
              description: Gaseous Gaming Server

      - Productivity:
          - Paperless:
              icon: paperless
              href: https://paperless.shakir.cloud
              description: Paperless-ngx Document Management
          - Excalidraw:
              icon: excalidraw
              href: https://draw.shakir.cloud
              description: Excalidraw Collaborative Drawing
          - ActualBudget:
              icon: sh-actual-budget
              href: https://budget.shakir.cloud
              description: Actual Budget Personal Finance

      - Utilities:
          - S-pdf:
              icon: sh-stirling-pdf
              href: https://spdf.shakir.cloud
              description: PDF Document Management
          - IT-Tools:
              icon: sh-it-tools
              href: https://it-tools.shakir.cloud
              description:  Various IT utilities
          - Speedtest:
              icon: sh-speedtest
              href: https://speedtest.shakir.cloud
              description: Internet Speed Test
          - Omnitools:
              icon: sh-omnitools
              href: https://omnitools.shakir.cloud
              description: OmniTools for various utilities
          - Change Detection:
              icon: sh-changedetection
              href: https://change.shakir.cloud
              description: Change Detection for web pages

  widgets:
    - resources:
        # change backend to 'kubernetes' to use Kubernetes integration. Requires RBAC.
        backend: resources
        expanded: true
        cpu: true
        memory: true
    - search:
        provider: duckduckgo
        target: _blank
    ## Uncomment to enable Kubernetes integration
    # - kubernetes:
    #     cluster:
    #       show: true
    #       cpu: true
    #       memory: true
    #       showLabel: true
    #       label: "cluster"
    #     nodes:
    #       show: true
    #       cpu: true
    #       memory: true
    #       showLabel: true
  kubernetes:
    # change mode to 'cluster' to use RBAC service account
    mode: disable
    # Uncomment to enable gateway api HttpRoute discovery.
    #gateway: true
  docker:
  settings:

  # all sections can alternately be appended with "String" such as this example settings. This is useful
  # for defining a stable ordering. Unfortunately Go's (and therefore Helm's) toYaml function sorts keys
  # and loses and input ordering. Using a string is the best way around this.
  settingsString: |
    title: Homepage
    headerStyle: boxed
    layout:
      Infrastructure:
      Multimedia:
      Productivity:
      Synology:
      Utilities:
      Bookmarks:
# -- Main environment variables. Template enabled.
# Syntax options:
# A) TZ: UTC
# B) PASSWD: '{{ .Release.Name }}'
# C) PASSWD:
#      configMapKeyRef:
#        name: config-map-name
#        key: key-name
# D) PASSWD:
#      valueFrom:
#        secretKeyRef:
#          name: secret-name
#          key: key-name
#      ...
# E) - name: TZ
#      value: UTC
# F) - name: TZ
#      value: '{{ .Release.Name }}'
env:
  - name: HOMEPAGE_ALLOWED_HOSTS
    # This value must be set
    # ref: https://gethomepage.dev/installation/#homepage_allowed_hosts
    value: home.shakir.cloud

# To include environment variables from other configs or other secrets for use in
# Homepage's variable substitutions. Refer to them here.
# envFrom:
#   - secretRef:
#       name: my-secret
#   - configMapRef:
#       name: my-configmap

persistence:
  logs:
    enabled: true
    type: emptyDir
    mountPath: /app/config/logs

# resources:
#   requests:
#     memory: 10Mi
#     cpu: 10m
#   limits:
#     memory: 200Mi
#     cpu: 500m

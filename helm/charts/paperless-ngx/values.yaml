# TODO: consolidate app attributes in a top-level app: section
paperlessngx:
  image:
    repository: ghcr.io/paperless-ngx/paperless-ngx
    # TODO: pin to a specific version from the repos release tags
    tag: latest
    pullPolicy: IfNotPresent

  # App env-vars. For available env-vars See: https://docs.paperless-ngx.com/configuration/
  env:
    - name: PAPERLESS_REDIS
      value: "redis://redis:6379"
    - name: PAPERLESS_URL
      value: "https://paperless.shakir.cloud"
    - name: PAPERLESS_TIME_ZONE
      value: "America/Los_Angeles"
    - name: PAPERLESS_OCR_LANGUAGE
      value: "eng"
    - name: "PAPERLESS_OCR_LANGUAGES"
      value: "ara"

# Creates a default Paperless admin user by exporting the
# PAPERLESS_ADMIN_USER and PAPERLESS_ADMIN_PASSWORD environment variables.
# This is recommended only for initial setup on Kubernetes.
#
# The credentials below are stored in plain text under stringData and should
# be overridden during deployment for security.
#
# Example override:
#   --set adminSecret.password=$(openssl rand -base64 16)
#
# Reference: https://docs.paperless-ngx.com/configuration/#paperless_admin_user
adminSecret:
  enabled: true
  create: true
  name: paperless-ngx-admin
  usernameKey: username
  passwordKey: password
  username: admin
  password: changeme

# Redis instance used by Paperless, deployed as a statefulset.
# If you wish to change the host name, make it descriptive. The `host` value is used
# with the headless service as well, which is used to connect to the redis stateful pod.
redis:
  host: paperless-ngx-redis
  image:
    repository: docker.io/library/redis
    tag: "8"
    pullPolicy: IfNotPresent

# Shared PVC used by both Paperless and Redis.
# The deployment mounts subPaths from this volume for:
# - Paperless: data, media, export, and consume
# - Redis: database directory
#
# The goal is to reduce the number of resources provisioned and simplify volume management.
persistence:
  shared:
    existingClaim: paperless-ngx

ingress:
  enabled: true
  host: "paperless.shakir.cloud"
  ingressClassName: nginx
  annotations: {}

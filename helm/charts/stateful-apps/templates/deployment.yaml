apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "stateful-app.name" . }}
  labels: {{ include "stateful-app.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.app.replicaCount | default 1 }}
  selector:
    matchLabels: {{ include "stateful-app.selectorLabels" (dict "role" "app" "context" .) | nindent 6 }}-deployment
  template:
    metadata:
      labels: {{ include "stateful-app.selectorLabels" (dict "role" "app" "context" .) | nindent 8 }}-deployment
    spec:
      containers:
        - name: stateful-app
          image: "{{ .Values.app.image.repository }}:{{ .Values.app.image.tag }}"
          imagePullPolicy: {{ .Values.app.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.app.containerPort }}
          env:
            - name: {{ .Values.app.dbHostname }}
              value: {{ include "stateful-app.dbHeadlessServiceName" . }}
            {{- range .Values.app.env }}
            - name: {{ .name | quote }}
              value: {{ .value | quote }}
            {{- end }}
          {{- if .Values.app.envFromSecrets.enabled }}
          envFrom:
            {{- range .Values.app.envFromSecrets.secretRefNames }}
            - secretRef:
                name: {{ . | quote }}
            {{- end }}
          {{- end }}
          volumeMounts:
            {{- $claimName := required "persistence.existingClaim is required" .Values.persistence.existingClaim }}
            {{- range .Values.app.volumeMounts }}
            - name: {{ $claimName }}
              mountPath: {{ .mountPath }}
              subPath: {{ .subPath }}
            {{- end }}
          readinessProbe:
            httpGet:
              path: /
              port: {{ .Values.app.containerPort }}
            initialDelaySeconds: 5
            periodSeconds: 15
            timeoutSeconds: 2
            failureThreshold: 5
      volumes:
        - name: {{ .Values.persistence.existingClaim }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim }}

# Barebones for Prometheus stack (kube-prometheus-stack) helm chart.
# Additional configs (AlertManage endpoints, etc.) should be
# added in the `main.tf` file as helm values.
fullnameOverride: prometheus

# Required for subcharts like Grafana
ingress:
  enabled: true

alertmanager:
  fullnameOverride: alertmanager
  ingress:
    enabled: true
    ingressClassName: "nginx"
    hosts:
      - alertmanager.shakir.cloud
  alertmanagerSpec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: k3s.shakir.cloud/size
                  operator: In
                  values:
                    - x-large
    tolerations:
      - key: "dedicated"
        operator: "Equal"
        value: "monitoring"
        effect: "NoSchedule"

grafana:
  enabled: true
  fullnameOverride: grafana
  defaultDashboardsEnabled: true
  defaultDashboardsTimezone: "America/Los_Angeles"
  serviceMonitor:
    enabled: true
  admin:
    existingSecret: grafana-admin-credentials
    userKey: admin-user
    passwordKey: admin-password
  ingress:
    enabled: true
    ingressClassName: "nginx"
    hosts:
      - grafana.shakir.cloud
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: k3s.shakir.cloud/size
                operator: In
                values:
                  - x-large
  tolerations:
    - key: "dedicated"
      operator: "Equal"
      value: "monitoring"
      effect: "NoSchedule"

prometheus:
  enabled: true
  ingress:
    enabled: true
    ingressClassName: "nginx"
    hosts:
      - prometheus.shakir.cloud
  prometheusSpec:
    replicas: 1
    replicaExternalLabelName: "replica"
    ruleSelectorNilUsesHelmValues: false
    serviceMonitorSelectorNilUsesHelmValues: false
    podMonitorSelectorNilUsesHelmValues: false
    probeSelectorNilUsesHelmValues: false
    retention: 6h
    enableAdminAPI: true
    walCompression: true
    scrapeInterval: 30s
    evaluationInterval: 30s
    # This sets the cross-cluster scraping: k3s-main metrics endpoints
    additionalScrapeConfigs:
      - job_name: k3s-main-node-exporter
        metrics_path: /metrics
        scheme: https
        static_configs:
          - targets:
              - node-exporter.shakir.cloud
        tls_config:
          insecure_skip_verify: true

      - job_name: k3s-main-kubelet
        metrics_path: /metrics
        scheme: https
        static_configs:
          - targets:
              - kubelet.shakir.cloud
        tls_config:
          insecure_skip_verify: true

      - job_name: k3s-main-kubelet-cadvisor
        metrics_path: /metrics/cadvisor
        scheme: https
        static_configs:
          - targets:
              - kubelet.shakir.cloud
        tls_config:
          insecure_skip_verify: true

      - job_name: k3s-main-kube-state-metrics
        metrics_path: /metrics
        scheme: https
        static_configs:
          - targets:
              - kube-state-metrics.shakir.cloud
        tls_config:
          insecure_skip_verify: true
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: k3s.shakir.cloud/size
                  operator: In
                  values:
                    - x-large
    tolerations:
      - key: "dedicated"
        operator: "Equal"
        value: "monitoring"
        effect: "NoSchedule"

prometheusOperator:
  enabled: true
  prometheusConfigReloader:
    resources:
      requests:
        cpu: 200m
        memory: 50Mi
      limits:
        memory: 100Mi
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: k3s.shakir.cloud/size
                operator: In
                values:
                  - x-large
  tolerations:
    - key: "dedicated"
      operator: "Equal"
      value: "monitoring"
      effect: "NoSchedule"

kubeApiServer:
  enabled: true

kubelet:
  enabled: true
  serviceMonitor:
    metricRelabelings:
      - action: replace
        sourceLabels:
          - node
        targetLabel: instance

kubeControllerManager:
  enabled: true
  endpoints:
    - 10.10.50.60

coreDns:
  enabled: true

kubeDns:
  enabled: false

kubeEtcd:
  enabled: true
  endpoints:
    - 10.10.50.60
  service:
    enabled: true
    port: 2381
    targetPort: 2381

kubeScheduler:
  enabled: true
  endpoints:
    - 10.10.50.60

kubeProxy:
  enabled: true
  endpoints:
    - 10.10.50.60

kubeStateMetrics:
  enabled: true

kube-state-metrics:
  fullnameOverride: kube-state-metrics
  selfMonitor:
    enabled: true
  prometheus:
    monitor:
      enabled: true
      relabelings:
        - action: replace
          regex: (.*)
          replacement: $1
          sourceLabels:
            - __meta_kubernetes_pod_node_name
          targetLabel: kubernetes_node
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: k3s.shakir.cloud/size
                operator: In
                values:
                  - x-large
  tolerations:
    - key: "dedicated"
      operator: "Equal"
      value: "monitoring"
      effect: "NoSchedule"

nodeExporter:
  enabled: true
  serviceMonitor:
    relabelings:
      - action: replace
        regex: (.*)
        replacement: $1
        sourceLabels:
          - __meta_kubernetes_pod_node_name
        targetLabel: kubernetes_node
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: k3s.shakir.cloud/size
                operator: In
                values:
                  - x-large
  tolerations:
    - key: "dedicated"
      operator: "Equal"
      value: "monitoring"
      effect: "NoSchedule"

prometheus-node-exporter:
  fullnameOverride: node-exporter
  podLabels:
    jobLabel: node-exporter
  extraArgs:
    - --collector.filesystem.mount-points-exclude=^/(dev|proc|sys|var/lib/docker/.+|var/lib/kubelet/.+)($|/)
    - --collector.filesystem.fs-types-exclude=^(autofs|binfmt_misc|bpf|cgroup2?|configfs|debugfs|devpts|devtmpfs|fusectl|hugetlbfs|iso9660|mqueue|nsfs|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|selinuxfs|squashfs|sysfs|tracefs)$
  service:
    portName: http-metrics
  prometheus:
    monitor:
      enabled: true
      relabelings:
        - action: replace
          regex: (.*)
          replacement: $1
          sourceLabels:
            - __meta_kubernetes_pod_node_name
          targetLabel: kubernetes_node
  resources:
    requests:
      memory: 512Mi
      cpu: 250m
    limits:
      memory: 2048Mi

defaultRules:
  create: true
  rules:
    alertmanager: true
    etcd: true
    configReloaders: true
    general: true
    k8s: true
    kubeApiserverAvailability: true
    kubeApiserverBurnrate: true
    kubeApiserverHistogram: true
    kubeApiserverSlos: true
    kubelet: true
    kubeProxy: true
    kubePrometheusGeneral: true
    kubePrometheusNodeRecording: true
    kubernetesApps: true
    kubernetesResources: true
    kubernetesStorage: true
    kubernetesSystem: true
    kubeScheduler: true
    kubeStateMetrics: true
    network: true
    node: true
    nodeExporterAlerting: true
    nodeExporterRecording: true
    prometheus: true
    prometheusOperator: true
